package kr.or.ddit.dao.board;

import java.util.List;
import java.util.Map;

import kr.or.ddit.vo.BoardVO;

public interface IBoardDao {
	
	
	/**
	 * 페이지별로 리스트를 출력하는 메서드
	 * @param map 페이지의 리스트를 담는 객체
	 * @return 작업성공: 1  작업실패: 0
	 */
	public List<BoardVO> selectByPage(Map<String, Object> map);
	
	/**
	 * DB의 게시글 정보를 모두 가져와 List에 담아서 반환하는 메서드
	 * @return 전체 BoardVO객체가 저장된 List
	 */
	public List<BoardVO> boardPrintAll();
	
	/**
	 * BoardVO 객체에 담겨진 자료를 DB에 insert하는 메서드
	 * @param boardVo : DB에 insert할 자료가 저장된 VO객체
	 * @return 작업성공: 1  작업실패: 0
	 */
	public int insertBoard(BoardVO boardVo);
	
	/**
	 * BoardVo 객체에 담겨진 자료를 받아와 내용을 수정하는 메서드
	 * @param boardVo : 수정할 게시글의 자료가 담겨진 VO객체
	 * @return 작업성공: 1  작업실패: 0
	 */
	public int updateBoard(BoardVO boardVo);
	
	/**
	 * 게시글 번호를 매개변수로 하여 해당 게시글을 삭제하는 메서드
	 * @param boardNo : 삭제할 게시글 번호
	 * @return 작업성공: 1  작업실패: 0
	 */
	public int deleteBoard(int board_no);
	
	/**
	 * 게시글 제목을 검색하여 해당되는 게시글만 List에 담아서 변환하는 메서드
	 * @param title : 게시글 제목
	 * @return 조건에 부합하는 VO객체가 저장된 메서드
	 */
	public List<BoardVO> searchBoardbyTitle (String board_title);
	
	/**
	 * 멤버ID를 검색하여 해당되는 게시글만 List에 담아서 변환하는 메서드
	 * @param memId : 회원 ID
	 * @return 조건에 부합하는 VO객체가 저장된 메서드
	 */
	public List<BoardVO> searchBoardbyId (String mem_id);
	
	/**
	 * 게시글 번호를 입력받아 해당하는 게시글의 정보를 List에 담아서 반환하는 메서드
	 * @param boardNo : 검색하고자 하는 게시글번호
	 * @return 조건에 부합하는 VO객체가 저장된 메서드
	 */
	public BoardVO viewBoard(int board_no);
	
	/**
	 * 게시글을 열람할 때마다 조회수가 자동으로 1씩 오르게 하는 메서드
	 * @param boardNo : 내가 열람하는 게시글번호
	 * @return 작업성공: 1 작업성공: 0
	 */
	public int viewUpdate(int board_no);
	
	/**
	 * 전체 글의 갯수를 구하는 메서드
	 * @param map 전체글의   갯수를 구해서 담는 맵
	 * @return 작업성공: 1 작업성공: 0
	 */
	public int getTotalCount(Map<String, Object> map);
	
	
}
