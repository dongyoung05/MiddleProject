package kr.or.ddit.controller.member;

import java.io.IOException;
import java.lang.reflect.InvocationTargetException;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.beanutils.BeanUtils;

import kr.or.ddit.service.member.IMemberService;
import kr.or.ddit.service.member.MemberServiceImpl;
import kr.or.ddit.vo.MemberVO;


// 회원가입 추가를 진행하는 서블릿

@WebServlet("/insertMember.do")
public class InsertMember extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
   
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// 받아오는 데이터 인코딩
		request.setCharacterEncoding("utf-8");
		
		// 데이터 넣어줄 vo생성
		MemberVO memberVo = new MemberVO();
		
		try {
			//bean유틸로 한번에 vo에 저장하기
			BeanUtils.populate(memberVo, request.getParameterMap());
		} catch (IllegalAccessException e) {
			e.printStackTrace();
		} catch (InvocationTargetException e) {
			e.printStackTrace();
		}
		
		// 서비스 객체 연결하기
		IMemberService service = MemberServiceImpl.getInstance();
		
		// 쿼리문 실행하기 insert는 성공시 1, 실패시 0 반환이기 때문에 int type으로 변수설정
		// insertMember메서드에 회원가입에 기입했던 내용들을 memberVo에 넣어서 파라미터로 보낸다.
		int cnt = service.insertMember(memberVo);
		
		// 뷰에서 성공 실패 여부를 살펴보기 위해 cnt값을 cnt라고 저장한다
		request.setAttribute("cnt", cnt);
		
		// 성공 실패를 구분해주는 result.jsp파일에 cnt값을 보낸다.
		request.getRequestDispatcher("/view/result.jsp").forward(request, response);
				
	}
	
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

}
