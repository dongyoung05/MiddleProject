<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">

<script src="../js/jquery-3.7.1.min.js"></script>
<script src="../js/jquery.serializejson.min.js"></script>
<title>Insert title here</title>

<script>

$(function(){
	// id 정규식 최소 5글자이상 15글자이하
	$('#mem_id').on('keyup', function(){
		idvalue = $(this).val().trim();
		idreg = /^[a-zA-Z0-9]{5,15}$/;
		
		if(idreg.test(idvalue)) {
			//중복검사 버튼을 사용가능 하도록 활성화
			$('#mem_id').css('border', '2px solid blue');
			$('#chkBtn').prop('disabled', false)
		} else{
			$('#mem_id').css('border', '2px solid red');
			$('#chkBtn').prop('disabled', true);
		}
		
	});// id정규식 끝
	
	// 중복검사를 진행하는 버튼
	$('#chkBtn').click(function(){
		$.ajax({
			url : "/ProjectDHA/checkMemberId.do",
			data : {'mem_id' : idvalue},
			type : 'get',
			dataType : 'json',
			success : function(result){
				$('#chkId').html(result.flag).css('color', 'red');
			},
			error : function(xhr){
				alert(xhr.status);
			}
		});
	});// 중복검사 끝
	
	//비밀번호 정규식 특수문자가 반드시 포함된 4글자 이상 30글자 미만 비밀번호
	$('#mem_pass').on('keyup', function(){
		passvalue = $('#mem_pass').val().trim();
		//특수문자 순서 ?=.에 있는 데이터랑 []에 있는 데이터랑 같아야함
		passreg = /^(?=.*[!@#$%^&*()-_=+])[A-Za-z\d!@#$%^&*()-_=+]{4,30}$/;
		if(passreg.test(passvalue)){
			$('#mem_pass').css('border', '2px solid blue');
		
		} else{
			$('#mem_pass').css('border', '2px solid red');
		}
	});
	
	$('#mem_pass2').on('keyup', function(){
		passvalue2 = $('#mem_pass2').val().trim();
		if(passvalue2 != passvalue) {
			$('#chkPass').html('비밀번호가 다릅니다.').css('color', 'red');
		} else {
			$('#chkPass').html('');
		}
	})
	
// 	// 회원가입
// 	$('#MemberInsert').click(function(){
// 		// 입력한 값 가져오기 테스트
// 		insertData = $('#ff').serializeJSON();
// 		console.log(insertData);
		
// 		$.ajax({
			
// 			url : '/ProjectDHA/insertMember.do',
// 			data : insertData,
// 			dataType : 'json',
// 			type : 'post',
// 			success : function(result){
// 				alert(result.flag);
// 				location.href = '/member/LoginMember.jsp';
// 			},
// 			error : function(xhr){
// 				alert('상태 : ' + xhr.status);
// 			}
				
// 		});
// 	});
    
}) 
</script>

</head>
<body>
<div id="">
<h1 style="text-align: center;">회원가입 창</h1>
<form id="ff" style="text-align: center;" enctype="multipart/form-data" 
  action="/ProjectDHA/insertMember.do" method="post">	
	아이디 : <input type="text" id="mem_id" name="mem_id" placeholder="아이디를 입력하세요..."><input disabled type="button" id="chkBtn" value="중복체크"><br>
	<span id="chkId" ></span><Br>
	
	비밀번호 : <input type="password" id="mem_pass" name="mem_pass" placeholder="비밀번호를 입력하세요..."> <Br>
	비밀번호 확인 : <input type="password" id="mem_pass2" placeholder="비밀번호를 입력하세요..."><Br>
	<span id="chkPass"></span><br>
	이름 : <input type="text" id="mem_name" name="mem_name" placeholder="이름 입력하세요..."><Br>
	이메일 : <input type="text" id="mem_email" name="mem_email" placeholder="이메일을 입력하세요..."><Br>
	전화번호 : <input type="text" id="mem_tel" name="mem_tel" placeholder="전화번호를 입력하세요..."><Br>
	<input type="text" id="sample4_postcode" placeholder="우편번호" name="mem_zip">
	<input type="button" onclick="sample4_execDaumPostcode()" value="우편번호 찾기"><br>
	<input type="text" id="sample4_roadAddress" placeholder="도로명주소" name="mem_add1">
	<input type="text" id="sample4_jibunAddress" placeholder="지번주소">
	<span id="guide" style="color:#999;display:none"></span><Br>
	<input type="text" id="sample4_detailAddress" placeholder="상세주소" name="mem_add2">
	<input type="text" id="sample4_extraAddress" placeholder="참고항목"><br>
	생년월일 : <input type="date" name="mem_bir"><Br>
	사진 : <input type="file" name="mem_img" id="mem_img"> <Br>
	<input type="submit" value="회원가입" id="MemberInsert"> 
</form>

<script src="//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js"></script>
<script>
//본 예제에서는 도로명 주소 표기 방식에 대한 법령에 따라, 내려오는 데이터를 조합하여 올바른 주소를 구성하는 방법을 설명합니다.
function sample4_execDaumPostcode() {
    new daum.Postcode({
        oncomplete: function(data) {
            // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.

            // 도로명 주소의 노출 규칙에 따라 주소를 표시한다.
            // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.
            var roadAddr = data.roadAddress; // 도로명 주소 변수
            var extraRoadAddr = ''; // 참고 항목 변수

            // 법정동명이 있을 경우 추가한다. (법정리는 제외)
            // 법정동의 경우 마지막 문자가 "동/로/가"로 끝난다.
            if(data.bname !== '' && /[동|로|가]$/g.test(data.bname)){
                extraRoadAddr += data.bname;
            }
            // 건물명이 있고, 공동주택일 경우 추가한다.
            if(data.buildingName !== '' && data.apartment === 'Y'){
               extraRoadAddr += (extraRoadAddr !== '' ? ', ' + data.buildingName : data.buildingName);
            }
            // 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.
            if(extraRoadAddr !== ''){
                extraRoadAddr = ' (' + extraRoadAddr + ')';
            }

            // 우편번호와 주소 정보를 해당 필드에 넣는다.
            document.getElementById('sample4_postcode').value = data.zonecode;
            document.getElementById("sample4_roadAddress").value = roadAddr;
            document.getElementById("sample4_jibunAddress").value = data.jibunAddress;
            
            // 참고항목 문자열이 있을 경우 해당 필드에 넣는다.
            if(roadAddr !== ''){
                document.getElementById("sample4_extraAddress").value = extraRoadAddr;
            } else {
                document.getElementById("sample4_extraAddress").value = '';
            }

            var guideTextBox = document.getElementById("guide");
            // 사용자가 '선택 안함'을 클릭한 경우, 예상 주소라는 표시를 해준다.
            if(data.autoRoadAddress) {
                var expRoadAddr = data.autoRoadAddress + extraRoadAddr;
                guideTextBox.innerHTML = '(예상 도로명 주소 : ' + expRoadAddr + ')';
                guideTextBox.style.display = 'block';

            } else if(data.autoJibunAddress) {
                var expJibunAddr = data.autoJibunAddress;
                guideTextBox.innerHTML = '(예상 지번 주소 : ' + expJibunAddr + ')';
                guideTextBox.style.display = 'block';
            } else {
                guideTextBox.innerHTML = '';
                guideTextBox.style.display = 'none';
            }
        }
    }).open();
}
</script>

</div>
</body>
</html>