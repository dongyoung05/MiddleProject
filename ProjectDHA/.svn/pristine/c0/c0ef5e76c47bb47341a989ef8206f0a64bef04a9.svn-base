package kr.or.ddit.controller.board;

import java.io.File;
import java.io.IOException;
import java.lang.reflect.InvocationTargetException;
import java.util.UUID;

import javax.servlet.ServletException;
import javax.servlet.annotation.MultipartConfig;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.Part;

import org.apache.commons.beanutils.BeanUtils;

import kr.or.ddit.service.board.BoardServiceImpl;
import kr.or.ddit.service.board.IBoardService;
import kr.or.ddit.vo.BoardVO;

/**
 * Servlet implementation class BoardUpdate
 */
@WebServlet("/boardUpdate.do")
@MultipartConfig(fileSizeThreshold = 1024 * 1024 * 50, // 10mb 로 설정하고 싶을 때
maxFileSize = 1024 * 1024 * 50, maxRequestSize = 1024 * 1024 * 100)
public class BoardUpdate extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		//받아오는 데이터 인코딩
				request.setCharacterEncoding("utf-8");
				response.setCharacterEncoding("utf-8");
							
				//가져온 데이터를 담을 VO객체
				BoardVO boardVo = new BoardVO();
				
				  try {
					   BeanUtils.populate(boardVo, request.getParameterMap());
				  } catch (IllegalAccessException | InvocationTargetException e) {
					  e.printStackTrace();
				}

				
				
				//서비스 객체 얻기
				IBoardService service = BoardServiceImpl.getInstance();
				//서비스 메소드 호출 -결과값 가져오기
				int cnt = service.updateBoard(boardVo);
				if(cnt>0) {
					System.out.println("게시물이 성공적으로 등록되었습니다.");
				}
				
				//결과값을 request로 저장
				request.setAttribute("cnt", cnt);
				
				
				//view페이지로 이동
				request.getRequestDispatcher("/Q&A.jsp").forward(request, response);
			}


			
			/*
			 * private String extractFileName(Part part) { String fileName =" "; String
			 * headerValue = part.getHeader("content-disposition"); String[] itemArr =
			 * headerValue.split(";"); for(String item : itemArr) {
			 * if(item.trim().startsWith("filename")) {// 'fileName'이 있는 영역 찾기 fileName =
			 * item.substring(item.indexOf("=")+2, item.length()-1); // = 의 두칸 뒤 "" 제거하고 가운데
			 * } } return fileName; }
			 */
			 

		}
